server:
#  端口号
  port: 8085
spring:
  redis:
    host: 127.0.0.1
    port: 6379
    database: 0
    password: 123456
  application:
#   应用名
    name: service-zuul
eureka:
  #eueka 地址
  instance:
    hostname: localhost
    #    每秒发一个心跳包
    lease-renewal-interval-in-seconds: 1
    #    告诉服务器2秒没有心跳，注销
    lease-expiration-duration-in-seconds: 2
  client:
#    注册地址
    service-url:
      defaultZone: http://${eureka.instance.hostname}:8761/eureka/
zuul:
  #需要忽略的头部信息，不在传播到其他服务
  sensitive-headers: Access-Control-Allow-Origin
  ignored-headers: Access-Control-Allow-Origin,H-APP-Id,Token,APPToken
  routes:
    #网关名字随便起
    demo-customer:
#      网关url 端口后面的部分
      path: /test/**
      #映射的项目的spring.application.name
      serviceId: demo-customer
#    #有多个映射项目就重复操作
#    demo-customerb:
      ##      网关url 端口后面的部分
      #      path: /test/**
      #      #映射的项目的spring.application.name
      #      serviceId: demo-customer
  host:
    connect-timeout-millis: 15000 #HTTP连接超时大于Hystrix的超时时间
    socket-timeout-millis: 60000   #socket超时

ribbon:        #设置ribbon的超时时间小于zuul的超时时间
  ReadTimeout: 5000
  ConnectTimeout: 5000
#负载均衡配置
spring-boot-user:
  ribbon:
    listOfServices: http://127.0.0.1:8202
hystrix:
  command:
    default:
      execution:
        timeout:
          enabled: true
          isolation:
            thread:
              timeoutInMilliseconds: 2500